#! perl
use strict;
use warnings;

# Put the compiler version information, used for perl6 -v,
# into src/gen/version.pm.

###########################################################################

my $copyright_year = "2010";

my $release = qq{

	This is a development version of Rakudo Perl 6.  It comes after
	development release #29 "Erlangen" (2010-05-20) and before
	development release #30 (scheduled for 2010-06-17.)

};

###########################################################################

# Display the value of $release set above.
# Then display some information from git branch and git show, if available.

# The ending year in the copyright line (Copyright (C) 2008-20??)
# will be taken from the year of the git commit, if it is available.
# If not, use the value in $copyright_year.

$release =~ s/\n\s+/\n/smg;
$release =~ s/^\n//sm;
$release =~ s/"/\\"/g;
my @release = split '\n', $release;

print "# This file was generated by $0\n";

print q{
    .macro_const RAKUDO_HLL 'perl6'

    .HLL .RAKUDO_HLL

    .loadlib 'perl6_group'
    .loadlib 'perl6_ops'
    .loadlib 'math_ops'

    .namespace ['Perl6';'Compiler']

    # This overrides the version method in PCT::HLLCompiler

    .sub 'version' :method
};

print qq{    say "$_"\n} for @release;

my $host = $ENV{HOSTNAME} || $ENV{COMPUTERNAME} || "";
$host = " on $host" if $host;

my $user = $ENV{USER} || $ENV{USERNAME} || "";
$user = " by $user" if $user;

no warnings 'exec';
my $localtime = qx{/bin/date}
  || ""; # DON'T use the Windows "date" command!
use warnings;

$localtime =~ s/[\r\n]//g;
my $tz = $ENV{TZ} || "";
$tz = " $tz" if $tz;
$localtime = localtime() . $tz unless $localtime;

print qq{    say "It was built $localtime$user$host"\n};

# Try to include git info if possible.

# It is important to fail _gracefully_ if the user doesn't
# have a .git directory (tarballs usually don't) or if the
# user doesn't have the git command at all.

if ( -d ".git" ) {
    no warnings 'exec';
    my $git_branch = qx{git branch} || "";
    use warnings;
    my @git_branch = split "\n", $git_branch;
    for (@git_branch) {
	if (/^\*\s+([^ ]+)/) {
	    print qq{    say "It is from the git branch \\"$1\\""\n};
	}
    }
    no warnings 'exec';
    my $git_show = qx{git show} || "";
    use warnings;
    $git_show =~ s/"/\\"/g;
    $git_show =~ s/\r//g;
    $git_show =~ s/\n\n.*//s;
    $git_show =~ s/date.*\b(2\d{3})\b.*?\n\K.*//si;
    $copyright_year = $1 if $1;
    if ( my @git_show = split "\n", $git_show ) {
        print qq{    say "    $_"\n} for @git_show;
    } else {
	print qq{    say "Git commit information is not available."\n};
    }
} else {
    # This may confuse casual users more that it helps,
    # comment out if that seems to be the case.
    print qq{    say "It was not built from a git branch."\n};
}

print qq{    say "Rakudo Perl 6 is Copyright (C) 2008-$copyright_year,},
  qq{ The Perl Foundation."\n};

print q{
    $P0 = getattribute self, '$version'
    say $P0
    exit 0
    .end
};
